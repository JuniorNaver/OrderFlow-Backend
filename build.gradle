plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.youthcase'
version = '0.0.1-SNAPSHOT'
description = 'Smart ERP-MM System for Convenience Store'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    // ===========================
    // Spring Boot 기본 의존성
    // ===========================

    // Spring Data JPA (ORM, DB 접근 및 엔티티 매핑)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Boot Starter Validation 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Thymeleaf (서버 사이드 렌더링 템플릿 엔진)
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Thymeleaf 레이아웃 확장 (공통 레이아웃 관리)
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.0'

    // Thymeleaf + Spring Security 연동
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // Spring Web (REST API 및 MVC 웹 개발)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Security (인증/인가 처리)
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // 개발 편의 기능 (자동 리빌드 등)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Oracle JDBC 드라이버 (Oracle DB 연동)
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11'


    // ===========================
    // DTO/Entity 매핑 및 JSON 관련
    // ===========================

    // ModelMapper (DTO ↔ Entity 변환 유틸)
    implementation 'org.modelmapper:modelmapper:3.2.1'

    // Gson (JSON 직렬화/역직렬화 라이브러리)
    implementation 'com.google.code.gson:gson:2.10.1'


    // ===========================
    // Lombok 관련 의존성
    // ===========================

    // Lombok (Getter/Setter, Builder 등 보일러플레이트 코드 제거)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 테스트 코드에서도 Lombok 사용 가능하게 설정
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'


    // ===========================
    // 테스트 관련 의존성
    // ===========================

    // Spring Security 테스트 지원
    testImplementation 'org.springframework.security:spring-security-test'

    // Spring Boot 기본 테스트 (JUnit, Mockito 등 포함)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // JUnit 플랫폼 런처 (테스트 실행 환경)
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    // ===========================
    // JWT 관련 의존성
    // ===========================

    // JWT API (인터페이스)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    // JWT 구현체 (실제 동작 로직)
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'

    // JWT에서 JSON 처리를 위한 Jackson 연동
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

}


tasks.named('test') {
	useJUnitPlatform()
}
